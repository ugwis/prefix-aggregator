name: Build Check

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu
          - x86_64-apple-darwin
          - aarch64-apple-darwin
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-pc-windows-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      # https://github.com/actions/cache/blob/main/examples.md#rust---cargo
      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy, rustfmt
          target: ${{ matrix.target }}

      # Check code formatting
      - name: Check formatting
        uses: actions-rs/cargo@v1.0.1
        with:
          command: fmt
          args: -- --check

      # Run clippy
      - name: Run clippy
        uses: actions-rs/cargo@v1.0.1
        with:
          command: clippy
          args: -- -D warnings

      # Build the project
      - name: Build
        uses: actions-rs/cargo@v1.0.1
        with:
          command: build
          args: --release --target=${{ matrix.target }}
          use-cross: ${{ contains(matrix.os, 'ubuntu') }}

      # Run tests
      - name: Run tests
        uses: actions-rs/cargo@v1.0.1
        with:
          command: test
          args: --target=${{ matrix.target }}
          use-cross: ${{ contains(matrix.os, 'ubuntu') }}
