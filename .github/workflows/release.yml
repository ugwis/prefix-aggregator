name: Release

on:
  push:
    tags:
      - 'v*'
jobs:
  build:
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu
          - x86_64-apple-darwin
          - aarch64-apple-darwin
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-pc-windows-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      # https://github.com/actions/cache/blob/main/examples.md#rust---cargo
      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}
      - uses: actions-rs/cargo@v1.0.1
        with:
          command: build
          args: --release --target=${{ matrix.target }}
          use-cross: ${{ contains(matrix.os, 'ubuntu') }}

      - name: Package (Windows)
        if: contains(matrix.target, 'windows')
        run: |
          zip --junk-paths prefix-aggregator-${{ matrix.target }} target/${{ matrix.target }}/release/prefix-aggregator.exe
      - name: Package (Unix-like)
        if: "!contains(matrix.target, 'windows')"
        run: |
          zip --junk-paths prefix-aggregator-${{ matrix.target }} target/${{ matrix.target }}/release/prefix-aggregator
      - uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.target }}
          path: prefix-aggregator-${{ matrix.target }}.zip

  release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/build-*/prefix-aggregator-*.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
